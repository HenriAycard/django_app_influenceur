# Generated by Django 5.1.3 on 2024-11-22 21:34

import django.db.models.deletion
import intouch.api.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('address1', models.CharField(blank=True, max_length=250, verbose_name='address1')),
                ('address2', models.CharField(blank=True, max_length=50, null=True, verbose_name='address2')),
                ('city', models.CharField(blank=True, max_length=30, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=30, null=True, verbose_name='state')),
                ('country', models.CharField(blank=True, max_length=30, verbose_name='country')),
                ('postalCode', models.CharField(blank=True, max_length=5, verbose_name='postalCode')),
            ],
        ),
        migrations.CreateModel(
            name='TypeCompany',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nameTypeCompany', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name="person's first name")),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name="person's last name")),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('facebook', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram', models.CharField(blank=True, max_length=100, null=True)),
                ('tiktok', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('snapchat', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=False, verbose_name='user account is active')),
                ('is_influencer', models.BooleanField(default=False, verbose_name='user account is an influencer')),
                ('is_company', models.BooleanField(default=False, verbose_name='user account is a company')),
                ('is_admin', models.BooleanField(default=False, verbose_name='user account is admin')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=intouch.api.models.upload_to)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('isCompanyActif', models.BooleanField(default=True, verbose_name='isCompanyActif')),
                ('nameCompany', models.CharField(blank=True, max_length=50, verbose_name='nameCompany')),
                ('isTakeAway', models.BooleanField(default=False, verbose_name='isTakeAway')),
                ('isOnSit', models.BooleanField(default=False, verbose_name='isOnSit')),
                ('description', models.CharField(blank=True, max_length=800, verbose_name='description')),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('typeCompany', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.typecompany')),
            ],
        ),
        migrations.CreateModel(
            name='imgCompany',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file', models.ImageField(blank=True, null=True, upload_to=intouch.api.models.upload_to)),
                ('isPrincipal', models.BooleanField(default=False, verbose_name='isPrincipal')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imgCompany', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nameOffer', models.CharField(blank=True, max_length=100, verbose_name='nameOffer')),
                ('descriptionOffer', models.CharField(blank=True, max_length=500, verbose_name='descriptionOffer')),
                ('descriptionCondition', models.CharField(blank=True, max_length=500, verbose_name='descriptionCondition')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Opening',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fromDate', models.CharField(blank=True, max_length=15, verbose_name='fromDate')),
                ('toDate', models.CharField(blank=True, max_length=15, verbose_name='toDate')),
                ('startDate', models.CharField(blank=True, max_length=15, verbose_name='startDate')),
                ('endDate', models.CharField(blank=True, max_length=15, verbose_name='endDate')),
                ('pauseStart', models.CharField(blank=True, max_length=15, verbose_name='pauseStart')),
                ('pauseEnd', models.CharField(blank=True, max_length=15, verbose_name='pauseEnd')),
                ('isOpen', models.BooleanField(default=False, verbose_name='isOpen')),
                ('isOrderBy', models.IntegerField(blank=True, verbose_name='isOrderBy')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='openings', to='api.company')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, verbose_name='status')),
                ('dateReservation', models.DateTimeField(null=True, verbose_name='dateReservation')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.offer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
